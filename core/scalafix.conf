// https://github.com/scalacenter/scalafix.git#main

vars.proj.scalafix: ${vars.base} {
  name: "scalafix"
  uri: "https://github.com/scalacenter/scalafix.git#8f6c247fbf607cbd7b2ee08cf019f65b32308fca"

  extra.options: ["-Dscala213.nightly="${vars.scala-version}]
  extra.projects: ["*2_13"]
  extra.exclude: ["docs2_13"]
  extra.commands: ${vars.default-commands} [
    "removeScalacOptions -release 8"
    // CliGitDiffSuite: CommandLineError=4 did not equal Ok=0 error: 'master' unknown revision or path not in the working tree.
    // SymbolInformationSuite: awaiting https://github.com/scalacenter/scalafix/pull/1774
    """set unit.allProjects.map(_._1).find(_.id == "unit2_13").get / unmanagedSources / excludeFilter := HiddenFileFilter || "CliGitDiffSuite.scala" || "SymbolInformationSuite.scala""""
    // most of these fail because they're fetching dbuild-built dependencies
    // (Scalameta and Scalafix itself) at runtime. I didn't dig into it.
    // PrettyExpectSuite: awaiting https://github.com/scalacenter/scalafix/pull/1774
    // SaveExpect: depends on PrettyExpectSuite
    """set integration.allProjects.map(_._1).find(_.id == "integration2_13").get / unmanagedSources / excludeFilter := HiddenFileFilter || "ScalafixSuite.scala" || "ScalafixImplSuite.scala" || "ScalafixArgumentsSuite.scala" || "PrettyExpectSuite.scala" || "SaveExpect.scala""""
  ]
}
