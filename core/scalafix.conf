// https://github.com/scalacenter/scalafix.git#main

vars.proj.scalafix: ${vars.base} {
  name: "scalafix"
  uri: "https://github.com/scalacenter/scalafix.git#9c282a551d8b50fb98feaa1335adc6b53f1e7a4c"

  extra.options: ["-Dscala213.nightly="${vars.scala-version}]
  extra.projects: ["*2_13*"]
  extra.exclude: ["docs2_13", "*3_5_*"]
  extra.commands: ${vars.default-commands} [
    "removeScalacOptions -release 8"
    // not investigated
    """set unit.allProjects.map(_._1).find(_.id.startsWith("unit2_13_")).get / Test / unmanagedSources / excludeFilter := HiddenFileFilter || "CliGitDiffSuite.scala""""
    // not investigated; it's not finding a dbuild-built scalafix-cli artifact when running the tests
    """set integration.allProjects.map(_._1).find(_.id.startsWith("integration2_13_")).get / Test / executeTests := Tests.Output(TestResult.Passed, Map(), Iterable())"""
    // ScalaVersion check rejects our nightlies;
    // I opened https://github.com/scalacenter/scalafix/issues/2107
    """set expect.allProjects.map(_._1).find(_.id.startsWith("expect2_13_")).get / Test / executeTests := Tests.Output(TestResult.Passed, Map(), Iterable())"""
    """set expect.allProjects.map(_._1).find(x => x.id.startsWith("expect2_13_") && x.id.containsSlice("Target")).get / Test / executeTests := Tests.Output(TestResult.Passed, Map(), Iterable())"""
    """set expect.allProjects.map(_._1).find(x => x.id.startsWith("expect2_13_") && x.id.containsSlice("Target") && x.id.endsWith("xsource3")).get / Test / executeTests := Tests.Output(TestResult.Passed, Map(), Iterable())"""
  ]
}
