// https://github.com/scalacommunitybuild/scalatest.git#community-build-2.12  # was scalatest, 3.0.x

// forked for: build tweak, JDK 11 friendliness, comment out a test
// fork refreshed (from 3.0.x branch) January 2019

vars.proj.scalatest: ${vars.base} {
  name: "scalatest"
  uri: "https://github.com/scalacommunitybuild/scalatest.git#676c4123d48276a0bd4bbf62d683ad0df7a1a04e"
  extra.sbt-version: ${vars.sbt-0-13-version}
  extra.projects: ["scalatest", "scalactic"]
}

// this is almost 1M lines of code, but it needn't be green (or be compiled at all)
// for dependent projects to proceed, so let's keep it separate.  forked (December 2017)
// because of trouble with scalacticMacro -- the latter has publishing disabled

vars.proj.scalatest-tests: ${vars.base} {
  name: "scalatest-tests"
  uri: "https://github.com/scalacommunitybuild/scalatest.git#676c4123d48276a0bd4bbf62d683ad0df7a1a04e"
  extra.sbt-version: ${vars.sbt-0-13-version}
  extra.exclude: [
    // we already built these above
    "scalatest", "scalactic", "scalacticMacro"
    // no Scala.js plz
    "commonTestJS", "examplesJS", "scalacticJS", "scalacticMacroJS", "scalacticTestJS"
    "scalatestAppJS", "scalatestJS", "scalatestTestJS"
    // [scalatest-tests] [info] *** 5 SUITES ABORTED ***
    // [scalatest-tests] [info] *** 29 TESTS FAILED ***
    "examples"
  ]
  // needs extra heap to even compile
  extra.options: ["-Xmx3072m"]
  extra.commands: ${vars.default-commands} [
    // prone to intermittent failure
    """set excludeFilter in (Test, unmanagedSources) in scalatestTest := HiddenFileFilter || "AsyncFunSpecSpec.scala" || "AsyncFunSpecSpec2.scala" || "WaitersSpec.scala" || "ScalaFuturesSpec.scala" || "DispatchReporterSpec.scala" || "AsyncFunSpecLikeSpec2.scala" || "JUnitSuiteSpec.scala" || "AsyncFeatureSpecLikeSpec2.scala" || "ConductorFixtureSuite.scala" || "AsyncAssertionsSpec.scala" || "ConductorFixtureDeprecatedSuite.scala" || "TimeLimitsSpec.scala" || "JavaFuturesSpec.scala" || "TestThreadsStartingCounterSpec.scala" || "ConductorMethodsSuite.scala""""
    """set managedSources in Test in genRegularTests4 ~= (_.filterNot(_.getName == "TimeLimitsSpec.scala").filterNot(_.getName == "AsyncAssertionsSpec.scala").filterNot(_.getName == "WaitersSpec.scala").filterNot(_.getName == "AsyncFeatureSpecSpec.scala").filterNot(_.getName == "ConductorFixtureSuite.scala").filterNot(_.getName == "TestThreadsStartingCounterSpec.scala"))"""
    """set managedSources in Test in genRegularTests5 ~= (_.filterNot(_.getName == "AsyncFunSpecSpec2.scala").filterNot(_.getName == "TimeoutsSpec.scala"))"""
  ]
}
