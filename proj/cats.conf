// https://github.com/scalacommunitybuild/cats.git#community-build-2.12  # was typelevel, v1.6.0

// forked (February 2019) from 1.6.0 tag to make some tiny ScalaCheck
// 1.13 vs 1.14 tweaks so tests pass.
// when we upgrade to ScalaTest 3.1, let's freeze at v2.0.0 tag?

vars.proj.cats: ${vars.base} {
  name: "cats"
  uri: "https://github.com/scalacommunitybuild/cats.git#d93ccc0a55734bee059f1402b11e7c3363b0f938"

  // for some reason, adding the umbrella "catsJVM" project but excluding "bench"
  // (and "docs") doesn't succeed in removing the depending on cats-bench.
  // using deps.ignore doesn't fix it either. not sure how else to fix it
  // other than just enumerating what we want:
  extra.projects: ["coreJVM", "freeJVM", "kernelJVM", "kernelLawsJVM", "lawsJVM", "macrosJVM", "testkitJVM", "testsJVM", "alleycatsCoreJVM", "alleycatsTestsJVM"]
  extra.exclude: ["bench", "docs"]
  // tests are memory-hungry. hard to tell if occasional OutOfMemoryErrors are because
  // some random test input in a generative test hit a real bug, or whether memory needs
  // just fluctuate :-/  I've been gradually increasing this trying to fix an OOM in
  // ApplicativeSuite.  the repo's own .jvmopts has 6g
  extra.options: ["-Xmx6g"]
  extra.commands: ${vars.default-commands} [
    // intermittent failures
    """set tests.jvm / Test / unmanagedSources / excludeFilter := HiddenFileFilter || "ApplicativeSuite.scala""""
  ]
}
