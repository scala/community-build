// https://github.com/scala-js/scala-js.git

// if master proves difficult to track, the 0.6.x branch could be
// used instead; see discussion at
// https://github.com/scala/community-builds/issues/506

vars.proj.scala-js: ${vars.base} {
  name: "scala-js"
  uri: "https://github.com/scala-js/scala-js.git#9a035be678b5562475ef2a596847fd937b892ff5"
  // 1.3.0-RC4: ScalaJSCrossVersion.scala:34:23: stable identifier required, but sbt.`package`.CrossVersion.Disabled found.
  extra.sbt-version: ${vars.sbt-1-2-version}
  extra.options: [
    // hopefully avoid intermittent OutOfMemoryErrors with default 1.5G heap?
    "-Xmx2048m"
  ]
  // not really sure how this list was arrived at
  extra.projects: [ "logging", "linker", "testSuite" ]
  extra.commands: ${vars.default-commands} [
    // - We disable source map tests to save ourselves a `npm install source-map-support` on the workers.
    //   Although only `testSuite` actually has tests, dbuild will try to run the tests for all projects
    //   that `testSuite` depends on (transitively), so we need to set it in a bunch of places.
    "set Seq(library, testInterface, jUnitRuntime, testSuite).map(p => jsEnv in p := new org.scalajs.jsenv.nodejs.NodeJSEnv(org.scalajs.jsenv.nodejs.NodeJSEnv.Config().withExecutable(\""${vars.node}"\").withSourceMap(false)))"
    "set MyScalaJSPlugin.wantSourceMaps in testSuite := false"
    // Seb says it isn't appropriate to compile or run tests in certain subprojects;
    // see https://github.com/scala-js/scala-js/issues/3680
    "set test in testInterface in Test := {}"
    "set test in jUnitRuntime in Test := {}"
    "set test in testBridge in Test := {}"
    "set test in jUnitAsyncJS in Test := {}"
  ]
  // as usual with scripted-plugin, sigh
  deps.ignore: ["org.scala-sbt#scripted-plugin"]
  check-missing: false
}
