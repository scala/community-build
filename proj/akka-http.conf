// https://github.com/akka/akka-http.git#8d8aaa8f9a502b5d0f3e6de83e02b4bcdd0bf435  # was master

// frozen (February 2020) at a February 2020 commit just before UseHttp2 was removed
// from the API (playframework, downstream, still uses it)

vars.proj.akka-http: ${vars.base} {
  name: "akka-http"
  uri: "https://github.com/akka/akka-http.git#8d8aaa8f9a502b5d0f3e6de83e02b4bcdd0bf435"

  extra.exclude: ["docs", "akka-http-bench-jmh"]
  extra.options: [
    "-Dakka.genjavadoc.enabled=false", "-Dakka.scaladoc.diagrams=false"
    "-Dbintray.user=dummy", "-Dbintray.pass=dummy"
    // some tests run unforked, so this applies to those
    "-Dakka.fail-mixed-versions=false"
  ]
  extra.commands: ${vars.default-commands} [
    "set every bintrayReleaseOnPublish := false"
    """set http2Support / Test / unmanagedSources / excludeFilter := HiddenFileFilter || "WithPriorKnowledgeSpec.scala""""
    // GracefulTerminationSpec and EntityDiscardingSpec were found to be flaky at some point
    // HttpHeaderParserSpec fails because 2.13.3 changed Symbol#toString; we should re-enable once they upgrade
    """set httpCore / Test / unmanagedSources / excludeFilter := HiddenFileFilter || "GracefulTerminationSpec.scala" || "EntityDiscardingSpec.scala" || "HttpHeaderParserSpec.scala""""
    """set httpTests / Test / unmanagedSources / excludeFilter := HiddenFileFilter || "CodingDirectivesSpec.scala" || "HttpAppSpec.scala""""
    // and some tests run forked, so this goes in javaOptions, not extra.options
    """set ThisBuild / javaOptions += "-Dakka.fail-mixed-versions=false""""
  ]
}
