//// from environment

vars: {
  scala-version: ""
  scala-version: ${?version}
  scalac-opts: ""
  scalac-opts: ${?scalac_opts}
  node: "node" // node-js
  node: ${?NODE}
}

//// vars.base

// Each project is prefixed by ${vars.base} { ...
// so that common options or settings can be set by the
// configuration that includes this common file.
// Note however that += won't work inside vars.base.
// It's https://github.com/lightbend/config/issues/160.
// That's why if you override extra.commands you must
// explicitly include default-commands.

vars: {
  base: {}
}

include file("resolvers.conf")

//// shared settings

vars {
  default-commands: []
  sbt-0-13-version: "0.13.18"
  sbt-1-3-version: "1.3.13"
  sbt-1-4-version: "1.4.9"
  sbt-version: "1.5.5"
  sbt-java-options: ["-Xms1536m", "-Xmx1536m", "-Xss2m"]
}

//// compiler options manipulation

// appendScalacOptions, removeScalacOptions, removeDependency
// let us work around https://github.com/lightbend/dbuild/issues/144
vars.default-commands += """
set commands ++= {
  def alterSetting[T](s: State, setting: SettingKey[T])(fn: T => T) = alterKey(s, setting)(fn)
  def alterTask[T](s: State, task: TaskKey[T])(fn: T => T) = alterKey(s, task)(fn)
  def alterKey[T](s: State, st: ScopedTaskable[T])(fn: T => T) = {
    val extracted = sbt.Project extract s
    import extracted._
    val r = sbt.Project.relation(extracted.structure, true)
    val allDefs = r._1s.toSeq
    val scopes = allDefs.filter(_.key == st.key).map(_.scope).distinct
    val redefined = st match {
      case setting: SettingKey[T] => scopes.map(scope => setting in scope ~= fn)
      case task: TaskKey[T]       => scopes.map(scope => task in scope ~= fn)
    }
    val session = extracted.session.appendRaw(redefined)
    BuiltinCommands.reapply(session, structure, s)
  }
  def appendScalacOptions(s: State, args: Seq[String]): State = {
    def appendDistinct[A](x: Seq[A], y: Seq[A]) =
      x.filterNot(y.contains) ++ y
    alterTask(s, scalacOptions)(appendDistinct(_, args))
  }
  def removeScalacOptions(s: State, args: Seq[String]): State =
    alterTask(s, scalacOptions)(_.filterNot(args.contains))
  def removeJavaOptions(s: State, args: Seq[String]): State =
    alterTask(s, javaOptions)(_.filterNot(args.contains))
  def removeDependency(s: State, args: Seq[String]): State = {
    require(args.size == 2)
    alterSetting(s, libraryDependencies)(
      _.filterNot(mod => mod.organization == args(0) && mod.name == args(1)))
  }
  Seq(
    Command.args("appendScalacOptions", "<option>")(appendScalacOptions),
    Command.args("removeScalacOptions", "<option>")(removeScalacOptions),
    Command.args("removeJavaOptions", "<option>")(removeJavaOptions),
    Command.args("removeDependency", "<org> <artifact>")(removeDependency))
}
"""
vars.default-commands += "appendScalacOptions "${vars.scalac-opts}
vars.default-commands += "removeScalacOptions -Werror -Xfatal-warnings -Yno-adapted-args -Ywarn-inaccessible -Ywarn-nullary-override -Ywarn-nullary-unit -Ywarn-infer-any -Ywarn-unused-import -Ypartial-unification -Ywarn-adapted-args -Xmax-classfile-name -Ymacro-no-expand"
vars.base.extra.commands = ${vars.default-commands}

//// count lines of code

vars.base.extra.settings = ["""libraryDependencies in ThisBuild += compilerPlugin("com.lightbend" %% "cloc-plugin" % "0")"""]
vars.base.deps.inject: ["com.lightbend#cloc-plugin"]

//// cache

// new behemoths have much more disk space, so let's try keeping stuff
// substantially longer (2 weeks instead of 4-5 days) and see what
// the effect on disk space usage is, starting March 17 2018
options.cleanup: {
  extraction: {
    success: 336
    failure: 336
  }
  build: {
    success: 336
    failure: 336
  }
}

//// Scala itself

build += {
  sbt-version: ${vars.sbt-version}
  sbt-java-options: ${vars.sbt-java-options}
  extraction-version: ${vars.scala-version}

  projects: [
  {
    name: "cloc-plugin"
    uri:  "https://github.com/SethTisue/cloc-plugin.git#a42608a0a97476cfc4b79649bb91a1d761cf3672"
  }
  {
    name:  "scala"
    system: assemble
    cross-version: binary
    extra.parts.projects: [
      {
        set-version: ${vars.scala-version}
        name:   scala-library
        system: aether
        uri:   "aether:org.scala-lang#scala-library;"${vars.scala-version}
        extra.sources: true  // Scala.js wants this
      }
      {
        set-version: ${vars.scala-version}
        name:   scala-reflect
        system: aether
        uri:   "aether:org.scala-lang#scala-reflect;"${vars.scala-version}
      }
      {
        set-version: ${vars.scala-version}
        name:   scala-compiler
        system: aether
        uri:   "aether:org.scala-lang#scala-compiler;"${vars.scala-version}
      }
    ]
  }

]}

///// includes

// it's annoying, but if we want included files to be able to refer to
// variables, we can only include them at the top level.  and we can't
// `include "proj/*.conf"`, that's https://github.com/lightbend/config/issues/639

include "proj/acyclic.conf"
include "proj/advxml.conf"
include "proj/airframe.conf"
include "proj/akka-http-cors.conf"
include "proj/akka-http-json.conf"
include "proj/akka-http-session.conf"
include "proj/akka-http-webgoat.conf"
include "proj/akka-http.conf"
include "proj/akka-management.conf"
include "proj/akka-persistence-cassandra.conf"
include "proj/akka-persistence-jdbc.conf"
include "proj/akka-protobuf-v3.conf"
include "proj/akka-streams-tcp-chat.conf"
include "proj/akka.conf"
include "proj/algebra.conf"
include "proj/alpakka-kafka.conf"
include "proj/ammonite.conf"
include "proj/atto.conf"
include "proj/avro4s.conf"
include "proj/base64.conf"
include "proj/better-files.conf"
include "proj/better-monadic-for.conf"
include "proj/better-tostring.conf"
include "proj/bijection.conf"
include "proj/blaze.conf"
include "proj/boopickle.conf"
include "proj/breeze.conf"
include "proj/cachecontrol.conf"
include "proj/case-app.conf"
include "proj/cask.conf"
include "proj/castor.conf"
include "proj/cats-effect-testing.conf"
include "proj/cats-effect-tutorial.conf"
include "proj/cats-effect.conf"
include "proj/cats-mtl.conf"
include "proj/cats-parse.conf"
include "proj/cats-retry.conf"
include "proj/cats-testkit-scalatest.conf"
include "proj/cats-time.conf"
include "proj/cats.conf"
include "proj/circe-config.conf"
include "proj/circe-generic-extras.conf"
include "proj/circe-jackson.conf"
include "proj/circe.conf"
include "proj/ciris.conf"
include "proj/claimant.conf"
include "proj/classutil.conf"
include "proj/context-applied.conf"
include "proj/coulomb.conf"
include "proj/coursier.conf"
include "proj/data-class.conf"
include "proj/decline.conf"
include "proj/discipline-munit.conf"
include "proj/discipline-scalatest.conf"
include "proj/discipline-specs2.conf"
include "proj/discipline.conf"
include "proj/dispatch.conf"
include "proj/doobie.conf"
include "proj/doodle.conf"
include "proj/droste.conf"
include "proj/eff.conf"
include "proj/elastic4s.conf"
include "proj/enumeratum.conf"
include "proj/euler.conf"
include "proj/expecty.conf"
include "proj/expression-evaluator.conf"
include "proj/fansi.conf"
include "proj/fast-string-interpolator.conf"
include "proj/fastparse-scalameta.conf"
include "proj/fastparse.conf"
include "proj/finagle.conf"
include "proj/fs2-chat.conf"
include "proj/fs2.conf"
include "proj/genjavadoc.conf"
include "proj/geny.conf"
include "proj/gigahorse.conf"
include "proj/giter8.conf"
include "proj/github4s.conf"
include "proj/grizzled.conf"
include "proj/hasher.conf"
include "proj/http4s-jwt-auth.conf"
include "proj/http4s-parboiled2.conf"
include "proj/http4s.conf"
include "proj/implicitbox.conf"
include "proj/ip4s.conf"
include "proj/jackson-module-scala.conf"
include "proj/jawn-fs2.conf"
include "proj/jawn.conf"
include "proj/json4s.conf"
include "proj/jsoniter-scala.conf"
include "proj/jwt-scala.conf"
include "proj/kafka.conf"
include "proj/kamon.conf"
include "proj/kind-projector.conf"
include "proj/kits.conf"
include "proj/kittens.conf"
include "proj/lagom.conf"
include "proj/libra.conf"
include "proj/lift-json.conf"
include "proj/lightbend-emoji.conf"
include "proj/lila-ws.conf"
include "proj/log4cats.conf"
include "proj/log4s.conf"
include "proj/machinist.conf"
include "proj/macwire.conf"
include "proj/magnolia.conf"
include "proj/mainargs.conf"
include "proj/mdoc.conf"
include "proj/mercator.conf"
include "proj/metaconfig.conf"
include "proj/metrics-scala.conf"
include "proj/mima.conf"
include "proj/minitest.conf"
include "proj/mockito-scala.conf"
include "proj/moduload.conf"
include "proj/monix-bio.conf"
include "proj/monix-nio.conf"
include "proj/monix.conf"
include "proj/monocle.conf"
include "proj/mouse.conf"
include "proj/multibot.conf"
include "proj/munit-cats-effect.conf"
include "proj/munit.conf"
include "proj/natchez.conf"
include "proj/nscala-time.conf"
include "proj/os-lib.conf"
include "proj/paiges.conf"
include "proj/parboiled.conf"
include "proj/parboiled2.conf"
include "proj/pascal.conf"
include "proj/perfolation.conf"
include "proj/play-doc.conf"
include "proj/play-file-watch.conf"
include "proj/play-json.conf"
include "proj/play-webgoat.conf"
include "proj/play-ws.conf"
include "proj/playframework.conf"
include "proj/portable-scala-reflect.conf"
include "proj/pprint.conf"
include "proj/prog-scala-examples.conf"
include "proj/pureconfig.conf"
include "proj/quicklens.conf"
include "proj/reactive-mongo.conf"
include "proj/reactive-mongo-bson.conf"
include "proj/redis4cats.conf"
include "proj/refined.conf"
include "proj/requests-scala.conf"
include "proj/runtime-scaladoc-reader.conf"
include "proj/sbinary.conf"
include "proj/sbt-io.conf"
include "proj/scaffeine.conf"
include "proj/scala-async.conf"
include "proj/scala-collection-compat.conf"
include "proj/scala-collection-contrib.conf"
include "proj/scala-collection-laws.conf"
include "proj/scala-common.conf"
include "proj/scala-hedgehog.conf"
include "proj/scala-java-time.conf"
include "proj/scala-java8-compat.conf"
include "proj/scala-js-stubs.conf"
include "proj/scala-library-next.conf"
include "proj/scala-logging.conf"
include "proj/scala-newtype.conf"
include "proj/scala-parallel-collections.conf"
include "proj/scala-parser-combinators.conf"
include "proj/scala-pet-store.conf"
include "proj/scala-records.conf"
include "proj/scala-sculpt.conf"
include "proj/scala-ssh.conf"
include "proj/scala-stm.conf"
include "proj/scala-supertagged.conf"
include "proj/scala-swing.conf"
include "proj/scala-typed-holes.conf"
include "proj/scala-xml.conf"
include "proj/scalacheck-effect.conf"
include "proj/scalacheck-shapeless.conf"
include "proj/scalacheck.conf"
include "proj/scalachess.conf"
include "proj/scaladex.conf"
include "proj/scalafix.conf"
include "proj/scalafmt.conf"
include "proj/scalafx.conf"
include "proj/scalaj-http.conf"
include "proj/scalajson.conf"
include "proj/scalalib.conf"
include "proj/scalameta.conf"
include "proj/scalamock.conf"
include "proj/scalapb.conf"
include "proj/scalaprops.conf"
include "proj/scalariform.conf"
include "proj/scalastyle.conf"
include "proj/scalatags.conf"
include "proj/scalatest-3-0.conf"
include "proj/scalatest.conf"
include "proj/scalatestplus-junit.conf"
include "proj/scalatestplus-mockito.conf"
include "proj/scalatestplus-scalacheck.conf"
include "proj/scalatestplus-testng.conf"
include "proj/scalikejdbc.conf"
include "proj/scallop.conf"
include "proj/scapegoat.conf"
include "proj/scodec-bits.conf"
include "proj/scodec-cats.conf"
include "proj/scodec-stream.conf"
include "proj/scodec.conf"
include "proj/sconfig.conf"
include "proj/scopt.conf"
include "proj/scoverage.conf"
include "proj/scribe.conf"
include "proj/scrooge.conf"
include "proj/shapeless-java-records.conf"
include "proj/shapeless.conf"
include "proj/silencer.conf"
include "proj/simulacrum-scalafix.conf"
include "proj/singleton-ops.conf"
include "proj/sjson-new.conf"
include "proj/sksamuel-exts.conf"
include "proj/skunk.conf"
include "proj/slick.conf"
include "proj/sourcecode.conf"
include "proj/specs2.conf"
include "proj/spire.conf"
include "proj/spliff.conf"
include "proj/spray-json.conf"
include "proj/squants.conf"
include "proj/ssl-config.conf"
include "proj/sttp-model.conf"
include "proj/sttp-shared.conf"
include "proj/sttp.conf"
include "proj/treehugger.conf"
include "proj/tsec.conf"
include "proj/tut.conf"
include "proj/twirl.conf"
include "proj/twitter-util.conf"
include "proj/twotails.conf"
include "proj/typename.conf"
include "proj/unfiltered.conf"
include "proj/unindent.conf"
include "proj/unique.conf"
include "proj/upickle.conf"
include "proj/utest.conf"
include "proj/vault.conf"
include "proj/verify.conf"
include "proj/wartremover.conf"
include "proj/weaver-test.conf"
include "proj/zinc.conf"

include "projs.conf"
